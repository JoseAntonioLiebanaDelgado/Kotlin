// Generated by view binder compiler. Do not edit!
package com.example.mangashelfv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mangashelfv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMangaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnId;

  @NonNull
  public final EditText mangaId;

  @NonNull
  public final ImageView mangass;

  @NonNull
  public final RecyclerView recyclerManga;

  private ActivityMangaBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnId,
      @NonNull EditText mangaId, @NonNull ImageView mangass, @NonNull RecyclerView recyclerManga) {
    this.rootView = rootView;
    this.btnId = btnId;
    this.mangaId = mangaId;
    this.mangass = mangass;
    this.recyclerManga = recyclerManga;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMangaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMangaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_manga, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMangaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnId;
      Button btnId = ViewBindings.findChildViewById(rootView, id);
      if (btnId == null) {
        break missingId;
      }

      id = R.id.mangaId;
      EditText mangaId = ViewBindings.findChildViewById(rootView, id);
      if (mangaId == null) {
        break missingId;
      }

      id = R.id.mangass;
      ImageView mangass = ViewBindings.findChildViewById(rootView, id);
      if (mangass == null) {
        break missingId;
      }

      id = R.id.recyclerManga;
      RecyclerView recyclerManga = ViewBindings.findChildViewById(rootView, id);
      if (recyclerManga == null) {
        break missingId;
      }

      return new ActivityMangaBinding((ConstraintLayout) rootView, btnId, mangaId, mangass,
          recyclerManga);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
