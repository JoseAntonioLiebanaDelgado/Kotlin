// Generated by view binder compiler. Do not edit!
package com.example.mangashelfv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mangashelfv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMangaByIdBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnLink;

  @NonNull
  public final TextView detallesHeadingView;

  @NonNull
  public final RecyclerView recyclerDetallesById;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMangaByIdBinding(@NonNull RelativeLayout rootView, @NonNull Button btnLink,
      @NonNull TextView detallesHeadingView, @NonNull RecyclerView recyclerDetallesById,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnLink = btnLink;
    this.detallesHeadingView = detallesHeadingView;
    this.recyclerDetallesById = recyclerDetallesById;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMangaByIdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMangaByIdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_manga_by_id, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMangaByIdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_link;
      Button btnLink = ViewBindings.findChildViewById(rootView, id);
      if (btnLink == null) {
        break missingId;
      }

      id = R.id.detallesHeadingView;
      TextView detallesHeadingView = ViewBindings.findChildViewById(rootView, id);
      if (detallesHeadingView == null) {
        break missingId;
      }

      id = R.id.recycler_detalles_by_id;
      RecyclerView recyclerDetallesById = ViewBindings.findChildViewById(rootView, id);
      if (recyclerDetallesById == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMangaByIdBinding((RelativeLayout) rootView, btnLink, detallesHeadingView,
          recyclerDetallesById, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
